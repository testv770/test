/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { FileDatumWhereUniqueInput } from "../../fileDatum/base/FileDatumWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { LinkDatumWhereUniqueInput } from "../../linkDatum/base/LinkDatumWhereUniqueInput";
import { EnumRequestDatumWhereUniqueInput } from "../../enumRequestDatum/base/EnumRequestDatumWhereUniqueInput";
@InputType()
class RequestDatumWhereInput {
  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  askId?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  categoryRequestId?: CategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  duration?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FileDatumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FileDatumWhereUniqueInput)
  @IsOptional()
  @Field(() => FileDatumWhereUniqueInput, {
    nullable: true,
  })
  fileId?: FileDatumWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LinkDatumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LinkDatumWhereUniqueInput)
  @IsOptional()
  @Field(() => LinkDatumWhereUniqueInput, {
    nullable: true,
  })
  linkId?: LinkDatumWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  recipientId?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EnumRequestDatumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EnumRequestDatumWhereUniqueInput)
  @IsOptional()
  @Field(() => EnumRequestDatumWhereUniqueInput, {
    nullable: true,
  })
  statusId?: EnumRequestDatumWhereUniqueInput;
}
export { RequestDatumWhereInput };
